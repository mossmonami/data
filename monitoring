import cv2
import mediapipe as mp
import numpy as np

mp_drawing = mp.solutions.drawing_utils #드로잉 툴
mp_holistic = mp.solutions.holistic #홀리스틱 호출

cap = cv2.VideoCapture(0) #웹캠 영상 이니시에이트

with mp_holistic.Holistic(min_detection_confidence=0.5, min_tracking_confidence=0.5) as holistic:

    

    while cap.isOpened(): #캠 작동
        ret, frame = cap.read() #캠에서 받아오는 값

        image = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
        results = holistic.process(image)
        print(results.face_landmarks)
        #리컬러링 후 출력

        image = cv2.cvtColor(image, cv2.COLOR_RGB2BGR)
        #리컬러링된 이미지를 다시 BGR로 렌더링


        mp_drawing.draw_landmarks(image, results.face_landmarks, mp_holistic.FACEMESH_CONTOURS)
        mp_drawing.draw_landmarks(image, results.pose_landmarks, mp_holistic.POSE_CONNECTIONS)
        mp_drawing.draw_landmarks(image, results.right_hand_landmarks, mp_holistic.HAND_CONNECTIONS)
        mp_drawing.draw_landmarks(image, results.left_hand_landmarks, mp_holistic.HAND_CONNECTIONS)

        #face_landmarks, pose_landmarks, right_hand_landmarks(left는 생략)

        cv2.imshow('Holistic Model Detections', image)#스트리밍(렌더링), '창 이름'


        if cv2.waitKey(10) & 0xFF == ord('q'): #키보드 q 누르면 종료
            break # 
